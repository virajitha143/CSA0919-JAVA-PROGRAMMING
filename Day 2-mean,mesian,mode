import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
public class StatsCalculator {
    public static void main(String[] args) {
        double[] numbers = {1, 2, 3, 4, 5, 6, 6, 7, 8, 9};
        double mean = calculateMean(numbers);
        double median = calculateMedian(numbers);
        double mode = calculateMode(numbers);
        double total = calculateTotal(numbers);
        double average = calculateAverage(numbers);
        System.out.println("Mean: " + mean);
        System.out.println("Median: " + median);
        System.out.println("Mode: " + mode);
        System.out.println("Total: " + total);
        System.out.println("Average: " + average);
    }
    public static double calculateMean(double[] numbers) {
        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        return sum / numbers.length;
    }
    public static double calculateMedian(double[] numbers) {
        Arrays.sort(numbers);
        if (numbers.length % 2 == 0) {
            return (numbers[numbers.length / 2 - 1] + numbers[numbers.length / 2]) / 2.0;
        } else {
            return numbers[numbers.length / 2];
        }
    }
    public static double calculateMode(double[] numbers) {
        Map<Double, Integer> countMap = new HashMap<>();
        for (double num : numbers) {
            countMap.put(num, countMap.getOrDefault(num, 0) + 1);
        }
        double mode = 0;
        int maxCount = 0;
        for (Map.Entry<Double, Integer> entry : countMap.entrySet()) {
            if (entry.getValue() > maxCount) {
                mode = entry.getKey();
                maxCount = entry.getValue();
            }
        }
        return mode;
    }
    public static double calculateTotal(double[] numbers) {
        double sum = 0;
        for (double num : numbers) {
            sum += num;
        }
        return sum;
    }
    public static double calculateAverage(double[] numbers) {
        return calculateTotal(numbers) / numbers.length;
    }
}
